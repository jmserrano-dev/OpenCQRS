# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# trigger:
# - master

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    SonarCloud: SonarCloud
    organization: 'jmserrano-dev-github'
    projectKey: 'jmserrano-dev_OpenCQRS'
    projectName: OpenCQRS
    extraProperties: |
     sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    arguments: '--logger trx --collect "Code coverage"'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  
- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  enabled: false

- task: NuGetCommand@2
  displayName: 'publish nuget packages'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: 'push'
    feedsToUse: 'select'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'my-packages'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/../**/*.nupkg;!$(Build.ArtifactStagingDirectory)/../**/*.Sources.*.nupkg'
    allowPackageConflicts: true
    verbosityPush: 'Detailed'
